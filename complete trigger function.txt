CREATE OR REPLACE FUNCTION selenium_data.newdata_added()
  RETURNS trigger AS
$$
begin
	
	with a1 as (
	SELECT id, source_id, json_data,
	jsonb_array_elements(json_data)::jsonb ddd
	FROM selenium_data.crawl_data
	where id not in (select crawl_data_id from selenium_data.detailed_crawled_data)
	), a2 as(
	select id, source_id,
  	(SELECT website_name FROM selenium_data.crawl_source WHERE  id = source_id) AS source_name
 	,to_timestamp((SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Date')::text, 'MM-dd-yyyy') AS standard_date
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Original Date') AS original_date
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Date Description') AS date_description
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Company Name') AS company
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Country') AS country
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Event') AS standard_event
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Original Event') AS original_event
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Event Description') AS event_description
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Period End') AS period_end
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Symbol') AS symbol
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'ISIN') AS isin
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Url') AS url
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Time') AS _time
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Time Description') AS time_description
 	,(SELECT string_agg(p->>'value', ',') FROM jsonb_array_elements(ddd) p WHERE p->>'header' = 'Time Zone') AS time_zone
	FROM a1 )
	insert into selenium_data.detailed_crawled_data(crawl_data_id, source_id, source_name,
	standard_date, 
	original_date,  date_description, company, country,
	standard_event, original_event, event_description, period_end,
	symbol, isin, url, _time, time_description, time_zone)
	select id, source_id, source_name,
	standard_date, 
	original_date,  date_description, company, country,
	standard_event, original_event, event_description, period_end,
	symbol, isin, url, _time, time_description, time_zone
	from a2
	where id not in (select crawl_data_id from selenium_data.detailed_crawled_data)
;
 
    RETURN NEW;
END;
$$
LANGUAGE 'plpgsql';

CREATE FUNCTION selenium_data.update_company_code_from_insert()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF 
AS $BODY$
declare 
	company_code_value text;
	cnt integer;
begin
	company_code_value := null;
	SELECT count(*) INTO cnt FROM selenium_data.detailed_crawled_data WHERE id = NEW.id;
	
	if cnt = 1 then
		company_code_value := (select euroland_code from selenium_data.company_match where
			source_name = NEW.source_name AND is_confirmed = true AND				   
			(NEW.isin is null OR NEW.isin = '' OR crawled_isin = NEW.isin) AND
		    (NEW.company is null OR NEW.company = '' OR crawled_name = NEW.company) AND
			(NEW.symbol is null OR NEW.symbol = '' OR crawled_symbol = NEW.symbol)
							  );

		if company_code_value is not null AND company_code_value != '' then
			update selenium_data.detailed_crawled_data set company_code = company_code_value where id = NEW.id;
		end if;
	end if;
			   
    RETURN NEW;
END;
$BODY$;


CREATE FUNCTION selenium_data.update_company_code_from_insert_or_update()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF 
AS $BODY$
begin
	IF NEW.is_confirmed = true AND NEW.euroland_code is not null THEN
	update selenium_data.detailed_crawled_data 
	set company_code = NEW.euroland_code
	where source_name = NEW.source_name AND
		  (NEW.crawled_isin is null OR NEW.crawled_isin = '' OR isin = NEW.crawled_isin) AND
		  (NEW.crawled_symbol is null OR NEW.crawled_symbol = '' OR symbol = NEW.crawled_symbol) AND
		  (NEW.crawled_name is null OR NEW.crawled_name = '' OR company = NEW.crawled_name);
	END IF;
    RETURN NEW;
END;
$BODY$;